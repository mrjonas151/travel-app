datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String         @id
  email           String         @unique
  name            String?
  last_name       String?
  userRatings     UserRating[]
  date_of_include DateTime?      @default(now())
  updated_at      DateTime?      @updatedAt

  @@map("Users")
}

model TravelGuide{
  id          String   @id @default(uuid())
  url_image   String
  month       String
  day         String
  year        String
  title       String

  @@map("TravelGuide")
}

model Category{
  id              String @id @default(uuid())
  title           String
  tour_quantity   Int
  price           Float 
  tours           Tour[]

  @@map("Category")
}

model Testimonials{
  id              String @id @default(uuid())
  url_image1      String 
  url_image2      String 
  url_image3      String 
  comment         String 
  name            String
  profession      String

  @@map("Testimonials")
}

model Tour {
  id                      String          @id @default(uuid())
  url_image               String 
  title                   String
  city                    String 
  initial_date            DateTime 
  final_date              DateTime
  initial_price           Float
  max_people              Int
  min_age                 Int
  overview_city           String 
  overview_curiosities    String
  latitude                Float  
  longitude               Float 
  averageRating           Float
  userRatings             UserRating[]
  category                Category        @relation(fields: [categoryId], references: [id])
  categoryId              String
  country                 Country         @relation(fields: [countryId], references: [id])
  countryId               String
}

model Continent {
  id                String   @id @default(uuid())
  name              String   @unique
  countries         Country[]
  
  @@map("Continents")
}

model Country {
  id                            String   @id @default(uuid())
  name                          String   @unique
  travelers_quantity            Int
  url_image                     String
  latitude                      Float
  longitude                     Float
  min_weather                   Int 
  max_weather                   Int
  overview_country              String?
  overview_country_curiosities  String?
  language                      String?
  currency                      String?
  area                          String?
  population                    String?
  time_zone                     String?
  time_to_travel                String?
  tours                         Tour[]
  continent                     Continent @relation(fields: [continentId], references: [id])
  continentId                   String

  @@map("Countries")
}

model UserRating {
  id          String   @id @default(uuid())
  idTour      String
  idUser      String
  user_name   String
  user_email  String
  services    Int
  locations   Int
  amentities  Int
  prices      Int
  comfort     Int
  tour        Tour     @relation(fields: [idTour], references: [id])
  user        User     @relation(fields: [idUser], references: [id])
  comment     String?

  createdAt   DateTime @default(now())
  
  @@map("UserRatings")
}